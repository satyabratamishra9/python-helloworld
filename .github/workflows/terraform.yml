name: Terraform

on:
  push:
    branches:
      - master
      - feature/**
      - develop
      - qa
      - mock_prod
      - prod
    
  pull_request:
  
jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      PROJECT_ID: 'playground-s-11-f00d2e8b'

    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}
    
    steps:
    
    - name: checkout code
      uses: actions/checkout@v2
      
    - name: activate service account 
      env: 
        SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      run: |
        echo "$SERVICE_ACCOUNT_KEY" > ${HOME}/gcloud.json
        gcloud --quiet auth activate-service-account --key-file=${HOME}/gcloud.json --project=$PROJECT_ID

    - name: setup terraform
      uses: hashicorp/setup-terraform@v1

    - name: check dirs
      run: |
       echo "tf dir - ${tf_actions_working_dir}"
       echo "current dir - `pwd`"
       echo "list files - `ls`"

    - name: terraform fmt
      id: fmt
      run: terraform fmt -check
 #     continue-on-error: true

    - name: terraform init
      id: init
      run: terraform init

    - name: terraform validate
      id: validate
      run: terraform validate

    - name: terraform plan
      id: plan
      run: terraform plan -out=terraform.plan -var 'project_id=${PROJECT_ID}'
 #     continue-on-error: true
 
    - name: comment pr
      uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
      
          <details><summary>Show Plan</summary>
      
          \`\`\`${process.env.PLAN}\`\`\`
      
          </details>
      
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
        
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
        
    - name: terraform apply
      if: github.event_name == 'push'
      run: terraform apply -auto-approve -var 'project_id=${PROJECT_ID}'
