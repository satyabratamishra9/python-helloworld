# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  push:
    branches: [ feature/**, develop, qa, mock-prod, prod] 

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      SERVICE_NAME: "hello-world"
      DEV_PROJECT_ID: ""
      PROD_PROJECT_ID: ""
  
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: checkout code
      uses: actions/checkout@v2
    
    - name: set env variables for all environment
      env: 
        DEV_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        PROD_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY_PROD }}
      run: |
        CURRENT_BRANCH=${GITHUB_REF#refs/heads/}
        
        if [ $CURRENT_BRANCH == develop ];
         then
          echo ::set-env name=BRANCH_TAG::dev
          echo $DEV_PROJECT_ID
          echo ::set-env name=PROJECT_ID::${DEV_PROJECT_ID}
          echo $DEV_SERVICE_ACCOUNT_KEY
          echo ::set-env name=SERVICE_ACCOUNT_KEY::${DEV_SERVICE_ACCOUNT_KEY}
          
        elif [ `echo ${CURRENT_BRANCH::7}` == feature ];
         then
           FEATURE_TAG=$(echo $CURRENT_BRANCH | sed 's/\//-/')
           echo ::set-env name=BRANCH_TAG::${FEATURE_TAG}
           echo $DEV_PROJECT_ID
           echo ::set-env name=PROJECT_ID::${DEV_PROJECT_ID}
           echo $DEV_SERVICE_ACCOUNT_KEY
           echo ::set-env name=SERVICE_ACCOUNT_KEY::${DEV_SERVICE_ACCOUNT_KEY}
          
        elif [ $CURRENT_BRANCH == qa ];
         then
          echo ::set-env name=BRANCH_TAG::qa
          echo $DEV_PROJECT_ID
          echo ::set-env name=PROJECT_ID::${DEV_PROJECT_ID}
          echo $DEV_SERVICE_ACCOUNT_KEY
          echo ::set-env name=SERVICE_ACCOUNT_KEY::${DEV_SERVICE_ACCOUNT_KEY}
        
        elif [ $CURRENT_BRANCH == mock-prod ];
         then
          echo ::set-env name=BRANCH_TAG::mck-prd
          echo $DEV_PROJECT_ID
          echo ::set-env name=PROJECT_ID::${DEV_PROJECT_ID}
          echo $DEV_SERVICE_ACCOUNT_KEY
          echo ::set-env name=SERVICE_ACCOUNT_KEY::${DEV_SERVICE_ACCOUNT_KEY}
          
        elif [ $CURRENT_BRANCH == prod ];
         then
          echo ::set-env name=BRANCH_TAG::prd
          echo $PROD_PROJECT_ID
          echo ::set-env name=PROJECT_ID::${PROD_PROJECT_ID}
          echo $DEV_SERVICE_ACCOUNT_KEY
          echo ::set-env name=SERVICE_ACCOUNT_KEY::${DEV_SERVICE_ACCOUNT_KEY}
         
        else
          echo "merge to correct branch"
        fi
                
    - name: check branch tags
      run: |
        echo ${HOME}
        echo ${BRANCH_TAG}
        echo ${PROJECT_ID}
        echo ${SERVICE_ACCOUNT_KEY}
        
    - name: Activate Service Account 
      run: |
        echo "$SERVICE_ACCOUNT_KEY" > ${HOME}/gcloud.json
        gcloud --quiet auth activate-service-account --key-file=${HOME}/gcloud.json --project=$PROJECT_ID
 #     continue-on-error: true
 #       gcloud auth configure-docker
    
    - name: check gcloud info
      run: gcloud info
    
    - name: set environment variable of git short sha
      run: |
         echo "::set-env name=GITHUB_SHA_SHORT::$(git rev-parse --short HEAD)"
   
    - name: check branch
      run: |
        CURRENT_BRANCH=${GITHUB_REF#refs/heads/}
        echo ${CURRENT_BRANCH::7}

    #- name: env variables for develop branch
    #  if: github.ref == 'refs/heads/develop'
    #  run: |
    #    echo ::set-env name=BRANCH_TAG::dev
    #    
    #- name: env variables for qa branch
    #  if: github.ref == 'refs/heads/qa'
    #  run: |
    #    echo ::set-env name=BRANCH_TAG::qa
    #    
    #- name: env variables for mock-prod branch
    #  if: github.ref == 'refs/heads/mock-prod'
    #  run: |
    #    echo ::set-env name=BRANCH_TAG::mck-prd
    #    
    #- name: env variables for prod branch
    #  if: github.ref == 'refs/heads/prod'
    #  run: |
    #    echo ::set-env name=BRANCH_TAG::prd
    #
    #- name: env variables for feature branch
    #  run: |
    #    CURRENT_BRANCH=${GITHUB_REF#refs/heads/}
    #    if [ `echo ${CURRENT_BRANCH::7}` == feature ];
    #     then
    #       FEATURE_TAG=$(echo $CURRENT_BRANCH | sed 's/\//-/')
    #       echo ::set-env name=BRANCH_TAG::${FEATURE_TAG}
    #     
    #    else
    #      echo "merge to correct branch"
    #    fi
        
           
    - name: build docker image
      run: |
        docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:${BRANCH_TAG} \
                     -t gcr.io/$PROJECT_ID/$SERVICE_NAME:${BRANCH_TAG}-${GITHUB_SHA_SHORT} .
    
    - name: configure docker to use gcloud cli
      run: gcloud -q auth configure-docker

    - name: push docker image
      run: |
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME
